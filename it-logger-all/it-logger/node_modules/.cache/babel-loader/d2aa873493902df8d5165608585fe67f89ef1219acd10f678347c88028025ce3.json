{"ast":null,"code":"import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR } from \"./types\";\n\n// get techs from server\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/techs\");\n    const data = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText\n    });\n  }\n};\n\n// add tech to server\nexport const addTech = tech => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(\"/techs\", {\n      method: \"POST\",\n      body: JSON.stringify(tech),\n      headers: {\n        Content_Type: \"application/json\"\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText\n    });\n  }\n};\n\n// delete tech from server\nexport const deleteTech = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/techs${id}`, {\n      method: \"DELETE\"\n    });\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText\n    });\n  }\n};\n\n// set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"names":["GET_TECHS","ADD_TECH","DELETE_TECH","SET_LOADING","TECHS_ERROR","getTechs","dispatch","setLoading","res","fetch","data","json","type","payload","error","response","statusText","addTech","tech","method","body","JSON","stringify","headers","Content_Type","deleteTech","id"],"sources":["/Users/norbertasandrine/Documents/studies/react/brad/it-logger-all/02-it-logger-redux/src/actions/techActions.js"],"sourcesContent":["import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n} from \"./types\";\n\n// get techs from server\nexport const getTechs = () => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/techs\");\n    const data = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText,\n    });\n  }\n};\n\n// add tech to server\nexport const addTech = (tech) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/techs\", {\n      method: \"POST\",\n      body: JSON.stringify(tech),\n      headers: {\n        Content_Type: \"application/json\",\n      },\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_TECH,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText,\n    });\n  }\n};\n\n// delete tech from server\nexport const deleteTech = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`/techs${id}`, {\n      method: \"DELETE\",\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id,\n    });\n  } catch (error) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: error.response.statusText,\n    });\n  }\n};\n\n// set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXC,WAAW,EACXC,WAAW,QACN,SAAS;;AAEhB;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACFC,UAAU,CAAC,CAAC;IAEZ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;IACjC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BL,QAAQ,CAAC;MACPM,IAAI,EAAEZ,SAAS;MACfa,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPM,IAAI,EAAER,WAAW;MACjBS,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAK,MAAOZ,QAAQ,IAAK;EACnD,IAAI;IACFC,UAAU,CAAC,CAAC;IAEZ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MAChCU,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;MAC1BK,OAAO,EAAE;QACPC,YAAY,EAAE;MAChB;IACF,CAAC,CAAC;IACF,MAAMd,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BL,QAAQ,CAAC;MACPM,IAAI,EAAEX,QAAQ;MACdY,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPM,IAAI,EAAER,WAAW;MACjBS,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAIC,EAAE,IAAK,MAAOpB,QAAQ,IAAK;EACpD,IAAI;IACFC,UAAU,CAAC,CAAC;IAEZ,MAAME,KAAK,CAAC,SAASiB,EAAE,EAAE,EAAE;MACzBP,MAAM,EAAE;IACV,CAAC,CAAC;IAEFb,QAAQ,CAAC;MACPM,IAAI,EAAEV,WAAW;MACjBW,OAAO,EAAEa;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPM,IAAI,EAAER,WAAW;MACjBS,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACC;IAC1B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMT,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO;IACLK,IAAI,EAAET;EACR,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}