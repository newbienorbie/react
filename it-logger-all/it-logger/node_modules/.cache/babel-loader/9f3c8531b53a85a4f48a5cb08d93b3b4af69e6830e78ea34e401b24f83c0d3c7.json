{"ast":null,"code":"var _jsxFileName = \"/Users/norbertasandrine/Documents/studies/react/brad/it-logger-all/02-it-logger-redux/src/components/logs/Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\n// to connect redux to component\nimport { connect } from \"react-redux\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getLogs } from \"../../actions/logActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  _s();\n  // not needed because we get this from app level state\n  // const [logs, setLogs] = useState([]);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n  // not needed because we get this from logAction\n  // const getLogs = async () => {\n  //   setLoading(true);\n  //   const res = await fetch(\"/logs\");\n  //   const data = await res.json();\n\n  //   setLogs(data);\n  //   setLoading(false);\n  // };\n\n  if (loading || logs === null) {\n    return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"collection with-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"collection-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"center\",\n        children: \"System Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !loading && logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"No logs to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : logs.map(log => /*#__PURE__*/_jsxDEV(LogItem, {\n      log: log\n    }, log.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Logs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Logs;\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\n// connect takes 2 things: map state and any action we're going to run\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","jsxDEV","_jsxDEV","Logs","log","logs","loading","_s","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","id","_c","propTypes","object","isRequired","func","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/norbertasandrine/Documents/studies/react/brad/it-logger-all/02-it-logger-redux/src/components/logs/Logs.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n// to connect redux to component\nimport { connect } from \"react-redux\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getLogs } from \"../../actions/logActions\";\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  // not needed because we get this from app level state\n  // const [logs, setLogs] = useState([]);\n  // const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n  // not needed because we get this from logAction\n  // const getLogs = async () => {\n  //   setLoading(true);\n  //   const res = await fetch(\"/logs\");\n  //   const data = await res.json();\n\n  //   setLogs(data);\n  //   setLoading(false);\n  // };\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n\n      {/* finished loading and there's no logs */}\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show</p>\n      ) : (\n        logs.map((log) => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  log: state.log,\n});\n\n// connect takes 2 things: map state and any action we're going to run\nexport default connect(mapStateToProps, { getLogs })(Logs);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAC;EAAEC,GAAG,EAAE;IAAEC,IAAI;IAAEC;EAAQ,CAAC;EAAEN;AAAQ,CAAC,KAAK;EAAAO,EAAA;EACpD;EACA;EACA;;EAEAZ,SAAS,CAAC,MAAM;IACdK,OAAO,CAAC,CAAC;IACT;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,IAAIM,OAAO,IAAID,IAAI,KAAK,IAAI,EAAE;IAC5B,oBAAOH,OAAA,CAACJ,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAEA,oBACET,OAAA;IAAIU,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACpCX,OAAA;MAAIU,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAC/BX,OAAA;QAAIU,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAGJ,CAACL,OAAO,IAAID,IAAI,CAACS,MAAM,KAAK,CAAC,gBAC5BZ,OAAA;MAAGU,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEzCN,IAAI,CAACU,GAAG,CAAEX,GAAG,iBAAKF,OAAA,CAACL,OAAO;MAACO,GAAG,EAAEA;IAAI,GAAMA,GAAG,CAACY,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACJ,EAAA,CAtCIJ,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAwCVA,IAAI,CAACe,SAAS,GAAG;EACfd,GAAG,EAAEL,SAAS,CAACoB,MAAM,CAACC,UAAU;EAChCpB,OAAO,EAAED,SAAS,CAACsB,IAAI,CAACD;AAC1B,CAAC;AAED,MAAME,eAAe,GAAIC,KAAK,KAAM;EAClCnB,GAAG,EAAEmB,KAAK,CAACnB;AACb,CAAC,CAAC;;AAEF;AACA,eAAeR,OAAO,CAAC0B,eAAe,EAAE;EAAEtB;AAAQ,CAAC,CAAC,CAACG,IAAI,CAAC;AAAC,IAAAc,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}