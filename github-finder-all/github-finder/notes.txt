useState: For managing local component state
when to use: Component-level state that changes over time

useEffect: For side effects (API calls, subscriptions, DOM
when to use: After render operations, data fetching, subscriptions

useContext: For consuming context (global state)
when to use: Sharing data that can be considered "global"

useRef: For persistent mutable values and DOM references
when to use:
1. Holding mutable values that don't trigger re-renders
2. Direct DOM access

useCallback: For memoizing functions
when to use: Optimize performance by preventing unnecessary re-renders

useMemo: For memoizing expensive computations
when to use: Expensive calculations or preventing re-renders

useReducer: For complex state logic
when to use: Complex state logic with multiple sub-values

useLayoutEffect: For synchronous DOM mutations
when to use: Measurements and DOM mutations that must be synchronous